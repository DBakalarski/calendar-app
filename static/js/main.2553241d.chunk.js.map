{"version":3,"sources":["enums/enums.ts","components/SingleDay/SingleDay.js","helpers/helpers.js","components/Month/Month.js","components/TaskModal/TaskModal.js","data/actions/modal.actions.js","data/actions/tasks.action.js","components/SingleTask/SingleTask.js","components/TasksBoard/TasksBoard.js","App.js","data/reducers/tasks.reducer.js","data/reducers/modal.reducer.js","data/reducers/index.js","data/store.js","index.js"],"names":["actionTaskType","modalVisibleType","directionType","SingleDay","day","date","tasks","useSelector","state","filter","item","shallowEqual","className","map","formatDate","month","year","format","Date","actualDate","getMonth","getFullYear","monthNames","Month","useParams","monthUrl","yearUrl","history","useHistory","useState","Number","setDate","daysInMonth","getDaysInMonth","daysArray","Array","from","length","value","index","changeMonth","direction","newMonth","newYear","NEXT","PREVIOUS","push","onClick","TaskModal","dispatch","useDispatch","text","task","setTask","handleCloseModal","type","CLOSE_MODAL","handleInputChange","e","console","log","target","prevState","onSubmit","key","preventDefault","uuidv4","ADD_TASK","payload","alert","htmlFor","id","onChange","SingleTask","name","REMOVE_TASK","TasksBoard","slice","sort","a","b","App","modalVisible","modal","basename","process","path","to","OPEN_MODAL","initialState","tasksReducer","action","modalReducer","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2553241d.chunk.js","sourcesContent":["export enum actionTaskType {\r\n  ADD_TASK = \"ADD_TASK\",\r\n  REMOVE_TASK = \"REMOVE_TASK\",\r\n}\r\n\r\nexport enum modalVisibleType {\r\n  OPEN_MODAL = \"OPEN_MODAL\",\r\n  CLOSE_MODAL = \"CLOSE_MODAL\",\r\n}\r\n\r\nexport enum directionType {\r\n  NEXT = \"NEXT\",\r\n  PREVIOUS = \"PREVIOUS\",\r\n}\r\n","import React from \"react\";\r\nimport \"./singleDay.scss\";\r\n\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nexport interface TaskModalProps {\r\n  day: number;\r\n  date: string;\r\n}\r\n\r\nconst SingleDay: React.FC<TaskModalProps> = ({ day, date }) => {\r\n  const tasks = useSelector(\r\n    (state) => state.tasks.tasks.filter((item) => item.date === date),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    <div className=\"single-day\">\r\n      <div>{day}</div>\r\n      <div className=\"dots-container\">\r\n        {tasks.map(() => (\r\n          <div className=\"dot\"> </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleDay;\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatDate = (day: number, month: number, year: number) => {\r\n  return format(new Date(year, month - 1, day), \"yyyy-MM-dd\");\r\n};\r\n\r\nexport const actualDate = () => {\r\n  const date = new Date();\r\n  return `${date.getMonth() + 1}/${date.getFullYear()}`;\r\n};\r\n\r\nexport const monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n","import React, { useState } from \"react\";\r\nimport \"./month.scss\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { getDaysInMonth } from \"date-fns\";\r\nimport SingleDay from \"../SingleDay\";\r\nimport { directionType } from \"../../enums/enums\";\r\nimport { formatDate, monthNames } from \"../../helpers/helpers\";\r\n\r\nconst Month = () => {\r\n  interface IDateUseParams {\r\n    monthUrl: string;\r\n    yearUrl: string;\r\n  }\r\n\r\n  let { monthUrl, yearUrl }: IDateUseParams = useParams();\r\n  const history = useHistory();\r\n  const [date, setDate] = useState({\r\n    month: Number(monthUrl),\r\n    year: Number(yearUrl),\r\n  });\r\n\r\n  const { month, year } = date;\r\n\r\n  const daysInMonth = getDaysInMonth(new Date(year, month - 1));\r\n\r\n  const daysArray = Array.from({ length: daysInMonth }, (value, index) => ({\r\n    day: index + 1,\r\n  }));\r\n\r\n  const changeMonth = (direction: directionType) => {\r\n    let newMonth = month;\r\n    let newYear = year;\r\n    if (direction === directionType.NEXT) {\r\n      if (newMonth === 12) {\r\n        newMonth = 1;\r\n        newYear++;\r\n      } else {\r\n        newMonth++;\r\n      }\r\n    } else if (direction === directionType.PREVIOUS) {\r\n      if (newMonth === 1) {\r\n        newMonth = 12;\r\n        newYear--;\r\n      } else {\r\n        newMonth--;\r\n      }\r\n    }\r\n    setDate({\r\n      month: newMonth,\r\n      year: newYear,\r\n    });\r\n\r\n    history.push(`/month/${newMonth}/${newYear}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"month\">\r\n      <div className=\"buttons-date-container\">\r\n        <button\r\n          className=\"button previous\"\r\n          onClick={() => changeMonth(directionType.PREVIOUS)}\r\n        ></button>\r\n        <div className=\"date-actual\">\r\n          {monthNames[month - 1]} {year}\r\n        </div>\r\n        <button\r\n          className=\"button next\"\r\n          onClick={() => changeMonth(directionType.NEXT)}\r\n        ></button>\r\n      </div>\r\n      <div className=\"days-container\">\r\n        {daysArray.map((item, index) => (\r\n          <SingleDay\r\n            date={formatDate(item.day, month, year)}\r\n            day={item.day}\r\n            key={index}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Month;\r\n","import \"./taskModal.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTask } from \"../../data/actions/tasks.action\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { closeModal } from \"../../data/actions/modal.actions\";\r\n\r\ninterface FormElements extends HTMLFormControlsCollection {\r\n  value: HTMLInputElement;\r\n  date: HTMLInputElement;\r\n}\r\ninterface TasksFormElement extends HTMLFormElement {\r\n  elements: FormElements;\r\n}\r\n\r\nconst TaskModal: React.FC<TaskModalProps> = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [task, setTask] = useState({\r\n    text: \"\",\r\n    date: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent<TasksFormElement>) => {\r\n    e.preventDefault();\r\n    if (!task.text || !task.date) {\r\n      alert(\"Fill tasks values\");\r\n      return;\r\n    }\r\n    handleCloseModal();\r\n    dispatch(addTask(task.text, task.date, uuidv4()));\r\n  };\r\n\r\n  const handleCloseModal = (): void => {\r\n    dispatch(closeModal());\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    console.log(e.target.type);\r\n    setTask((prevState) => ({\r\n      ...prevState,\r\n      [e.target.type]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"modal\">\r\n        <div className=\"modal-content\">\r\n          <div onClick={handleCloseModal} className=\"close-modal\"></div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"form-task-value\">\r\n              <label htmlFor=\"task-value\">Task</label>\r\n              <input\r\n                id=\"task-value\"\r\n                type=\"text\"\r\n                value={task.text}\r\n                onChange={(e) => handleInputChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-task-date\">\r\n              <label htmlFor=\"task-date\">Date</label>\r\n              <input\r\n                id=\"task-date\"\r\n                type=\"date\"\r\n                onChange={(e) => handleInputChange(e)}\r\n              />\r\n            </div>\r\n            <button className=\"button submit\" type=\"submit\">\r\n              Add Task\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n","import { modalVisibleType } from \"../../enums/enums\";\r\n\r\nexport const openModal = () => {\r\n  return {\r\n    type: modalVisibleType.OPEN_MODAL,\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: modalVisibleType.CLOSE_MODAL,\r\n  };\r\n};\r\n","import { actionTaskType } from \"../../enums/enums\";\r\n\r\nexport const addTask = (value: string, date: string, key: string) => {\r\n  return {\r\n    type: actionTaskType.ADD_TASK,\r\n    payload: {\r\n      value,\r\n      date,\r\n      key,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeTask = (key: string) => {\r\n  console.log(\"action\", key);\r\n  return {\r\n    type: actionTaskType.REMOVE_TASK,\r\n    payload: key,\r\n  };\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { removeTask } from \"../../data/actions/tasks.action\";\r\nimport \"./singleTask.scss\";\r\n\r\nexport interface SingleTaskProps {\r\n  name: string;\r\n  date: string;\r\n  id: string;\r\n}\r\n\r\nconst SingleTask: React.FC<SingleTaskProps> = ({ name, date, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteTask = () => {\r\n    console.log(id);\r\n    dispatch(removeTask(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"single-task\">\r\n      <p className=\"name\">{name} </p> <p className=\"date\">{date}</p>\r\n      <button className=\"remove-task\" onClick={handleDeleteTask}>\r\n        x\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleTask;\r\n","import { shallowEqual, useSelector } from \"react-redux\";\r\nimport \"./taskBoard.scss\";\r\nimport SingleTask from \"../SingleTask\";\r\n\r\nexport interface TasksBoardProps {}\r\n\r\nconst TasksBoard: React.FC<TasksBOardProps> = () => {\r\n  const tasks = useSelector(\r\n    (state) =>\r\n      state.tasks.tasks.slice().sort((a, b) => (a.date > b.date ? 1 : -1)),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n    <div className=\"tasks-container\">\r\n      {console.log(tasks)}\r\n      {tasks.length ? <h2 className=\"title\">Tasks</h2> : null}\r\n      {tasks.map((item) => (\r\n        <SingleTask\r\n          name={item.value}\r\n          date={item.date}\r\n          id={item.key}\r\n          key={item.key}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksBoard;\r\n","import \"./App.scss\";\nimport Month from \"./components/Month\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport TaskModal from \"./components/TaskModal\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { openModal } from \"./data/actions/modal.actions\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport { actualDate } from \"./helpers/helpers\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { modalVisible } = useSelector((state) => state.modal, shallowEqual);\n  const { tasks } = useSelector((state) => state.tasks, shallowEqual);\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"header\"> Calendar App</h1>\n      <div className=\"task-calendar-container\">\n        {/* ONLY FOR GH PAGES */}\n        <Router basename={process.env.PUBLIC_URL}>\n          {/* <Router> */}\n          <Switch>\n            <Route path=\"/month/:monthUrl/:yearUrl\">\n              <Month />\n            </Route>\n            <Route>\n              <Redirect to={`/month/${actualDate()}`} />\n            </Route>\n          </Switch>\n        </Router>\n        {tasks.length ? <TasksBoard /> : null}\n      </div>\n      <button className=\"button add-task\" onClick={() => dispatch(openModal())}>\n        Add Task\n      </button>\n      {modalVisible ? <TaskModal /> : null}\n    </div>\n  );\n};\n\nexport default App;\n","import { actionTaskType } from \"../../enums/enums\";\r\n\r\ninterface ITaskReducerActions {\r\n  type: actionTaskType;\r\n  payload: {\r\n    value: string,\r\n    date: string,\r\n    key: string,\r\n  };\r\n}\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nexport const tasksReducer = (\r\n  state = initialState,\r\n  action: ITaskReducerActions\r\n) => {\r\n  switch (action.type) {\r\n    case actionTaskType.ADD_TASK:\r\n      return {\r\n        tasks: [\r\n          ...state.tasks,\r\n          {\r\n            value: action.payload.value,\r\n            date: action.payload.date,\r\n            key: action.payload.key,\r\n          },\r\n        ],\r\n      };\r\n    case actionTaskType.REMOVE_TASK:\r\n      console.log(\"key\", action.payload);\r\n      console.log(...state.tasks);\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks.filter((item) => item.key !== action.payload)],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasksReducer;\r\n","import { modalVisibleType } from \"../../enums/enums\";\r\n\r\ninterface IModalReducerActions {\r\n  type: modalVisibleType;\r\n}\r\n\r\nconst initialState = {\r\n  modalVisible: false,\r\n};\r\n\r\nexport const modalReducer = (\r\n  state = initialState,\r\n  action: IModalReducerActions\r\n) => {\r\n  switch (action.type) {\r\n    case modalVisibleType.OPEN_MODAL:\r\n      return {\r\n        ...state,\r\n        modalVisible: true,\r\n      };\r\n    case modalVisibleType.CLOSE_MODAL:\r\n      return {\r\n        ...state,\r\n        modalVisible: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport tasksReducer from \"./tasks.reducer\";\r\nimport modalReducer from \"./modal.reducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  tasks: tasksReducer,\r\n  modal: modalReducer,\r\n});\r\n\r\nexport default rootReducers;\r\n","import { createStore } from \"redux\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './data/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}